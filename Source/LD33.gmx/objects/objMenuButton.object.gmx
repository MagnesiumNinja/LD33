<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMenuButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = "";
selection = 0;
hover = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button_pressed(global.KEY_DASH) &amp;&amp;
    mouse_x &gt;= bbox_left &amp;&amp; mouse_x &lt;= bbox_right &amp;&amp; 
    mouse_y &gt;= bbox_top &amp;&amp; mouse_y &lt;= bbox_bottom &amp;&amp;
    !objMenuController.selected)
{
    switch(selection)
    {  
        case 0: // Load Game
        {        
            if (global.SAVED_ROOM &gt;= 0)
            {
                objMenuController.selected = true;
                audio_play_sound(sndHudClick, 50, false);
                
                var st = instance_create(x, y, objScreenTransition);
                st.rm = global.SAVED_ROOM;
            }
            
            break;
        }
        
        case 1: // New Game
        {
            objMenuController.selected = true;
                audio_play_sound(sndHudClick, 50, false);
    
            if (saveFileExists(0))
            {
                deleteSaveFile(0);
                createSaveFile(0);
                
                global.SAVED_ROOM = -1;
                global.SAVED_X = -1;
                global.SAVED_Y = -1;
                global.SAVED_TO = -1;
                global.DEATHS = 0;
                global.SAVED_AREA = -1;
                
                saveGame(0);
            }
        
            var st = instance_create(x, y, objScreenTransition);
            st.rm = rmApartments;
                
            break;
        }
        
        case 2: // Quit
        {
            objMenuController.selected = true;
            audio_play_sound(sndHudClick, 50, false);
            game_end();
            
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_halign(fa_center);
draw_set_valign(fa_center);

draw_set_font(fntText);

if (selection == 0 &amp;&amp; global.SAVED_ROOM == -1)
{
    draw_set_color(c_gray);
}
else
{
    if (hover)
    {
        draw_set_color(make_color_rgb(255, 135, 83));   
    }
    else
    {
        draw_set_color(c_white);
    }
}

draw_text(x, y, text);

draw_set_halign(fa_left);
draw_set_valign(fa_top);


if (mouse_x &gt;= bbox_left &amp;&amp; mouse_x &lt;= bbox_right &amp;&amp; 
    mouse_y &gt;= bbox_top &amp;&amp; mouse_y &lt;= bbox_bottom &amp;&amp;
    !objMenuController.selected)
{
    hover = true;

    if (selection == 1 &amp;&amp; global.SAVED_ROOM &gt;= 0)
    {
        with (objCursor)
        {
            draw_set_alpha(1);
            draw_set_font(fntText);
            draw_set_color(c_black);
            draw_set_valign(fa_bottom);
            draw_set_halign(fa_right);
            
            draw_text(view_xview[0] + view_wview[0] - 16 + 2, view_yview[0] + view_hview[0] - 16 + 2, "This will erase your save!");
            
            draw_set_color(c_white);
            
            draw_text(view_xview[0] + view_wview[0] - 16, view_yview[0] + view_hview[0] - 16, "This will erase your save!");
            
            draw_set_halign(fa_center);
            draw_set_valign(fa_top);
        }
    }
}
else
{
    hover = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
