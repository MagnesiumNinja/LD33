<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CONSTANTS //

FADE_IN_RATE = 30;
FADE_OUT_RATE = 35;
WAIT_TIME = 120;

TITLE_OFF = 192;
TEXT_OFF = 512;
TEXT_BUFFER = 48;
NAME_BUFFER = 32;


// VARIABLES //

alpha = 0;
waitTime = WAIT_TIME;
stage = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (stage == 0)
{
    if (alpha &lt; 0.99)
    {
        alpha += smoothMove(alpha, 1, FADE_IN_RATE);
    }
    else
    {
        stage++;
    }
}
else if (stage == 1)
{
    if (waitTime &gt; 0)
    {
        waitTime--;
    }
    else
    {
        stage++;
    }
}
else
{
    if (alpha &gt; 0.1)
    {
        alpha += smoothMove(alpha, 0, FADE_OUT_RATE);
    }
    else
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Calculate time
var ms, s, m;
ms = floor(global.TIME / 0.06);

s = floor(ms / 1000);
ms -= s * 1000;

m = floor(s / 60);
s -= m * 60;


// Draw text
draw_set_alpha(alpha);

draw_set_font(fntTitleCard);
draw_set_halign(fa_center);

draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + TITLE_OFF, "The End");

draw_set_font(fntText);
draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + TITLE_OFF + TEXT_BUFFER * 2, "Deaths: " + string(global.DEATHS));

// Draw the timer
if (ms &gt; 99)
{
    draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + TITLE_OFF + TEXT_BUFFER * 3, 
            "Time: " +
            string_repeat("0", 2 - string_length(string(m))) + string(m) + ":" + 
            string_repeat("0", 2 - string_length(string(s))) + string(s) + ":" + 
            string_repeat("0", 2 - string_length(string_copy(string(ms), 0, 2))) + string_copy(string(ms), 0, 2));
}
else
{
    draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + TITLE_OFF + TEXT_BUFFER * 3, 
            "Time: " +
            string_repeat("0", 2 - string_length(string(m))) + string(m) + ":" + 
            string_repeat("0", 2 - string_length(string(s))) + string(s) + ":" + 
            string_repeat("0", 2 - string_length(string_copy(string(ms), 1, 1))) + string_copy(string(ms), 1, 1));
}

// Names
draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + TEXT_OFF, "Magnesium Ninja Studios");

draw_set_font(fntName);
draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + TEXT_OFF + TEXT_BUFFER, "Chris Klassen");
draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + TEXT_OFF + NAME_BUFFER + TEXT_BUFFER, "Justin Wang");


draw_set_halign(fa_left);
draw_set_alpha(1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
