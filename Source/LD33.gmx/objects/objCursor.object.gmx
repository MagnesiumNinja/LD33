<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9900</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_exists(objPlayer))
{
    if (objPlayer.state == PlayerStates.SHADOW)
    {
        draw_set_color(c_orange);
        draw_set_alpha(0.15);
        
        var dir = point_direction(objPlayer.x, objPlayer.y, mouse_x, mouse_y);

        
        if (collision_line(objPlayer.x, objPlayer.y, mouse_x, mouse_y, objBlock, false, true))
        {
            
            if (compareAngles(dir, objPlayer.image_angle) &lt;= 90)
            {
                var i;
                for (i = 0; i &lt; point_distance(objPlayer.x, objPlayer.y, mouse_x, mouse_y); i++)
                {
                    if (collision_point(objPlayer.x + lengthdir_x(i, dir), objPlayer.y + lengthdir_y(i, dir), objBlock, false, true))
                    {   
                        draw_line_width(objPlayer.x, objPlayer.y, objPlayer.x + lengthdir_x(i, dir), objPlayer.y + lengthdir_y(i, dir), 2);
                        draw_set_alpha(1);
                        draw_sprite(sprDashEnd, 0, objPlayer.x + lengthdir_x(i, dir), objPlayer.y + lengthdir_y(i, dir));
                        break;
                    }
                }
            }
        }
        else if (compareAngles(dir, objPlayer.image_angle) &lt;= 90)
        {
            draw_line_width(objPlayer.x, objPlayer.y, mouse_x, mouse_y, 2);
        }
        
        
        draw_set_color(c_white);
        draw_set_alpha(1);
    }
}

// Draw the cursor
draw_sprite_ext(sprite_index, image_index, mouse_x, mouse_y, image_xscale, image_yscale, image_angle, c_white, image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
